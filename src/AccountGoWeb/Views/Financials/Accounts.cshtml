@model string

<div>
</div>
<div>
    <div id="accounts" class="ag-blue"></div>
</div>
<script>
    var columnDefs = [
        {headerName: "Group", cellRenderer: 'group'},
        {headerName: "Code", width: 100, cellRenderer: function(val){
            return "<a href='account/" + val.data.id + "'>" + val.data.accountCode + "</a>";
        }},
        {headerName: "Name", field: "accountName", width: 350, cellRenderer: function(val){
            if(val.data.childAccounts.length > 0)
                return "";
            return val.data.accountName;
        }},
        {headerName: "Description", field: "description", width: 250},
        {headerName: "Cash", width: 100, cellRenderer: function(val) {
            if(val.data.isCash)
                return '<input type="checkbox" checked disabled />';
            return '<input type="checkbox" disabled />';
        }},
        {headerName: "Balance", field: "balance", width: 100, cellRenderer: function(val){
            if(val.data.childAccounts.length > 0)
                return val.data.totalBalance;
            return val.data.balance;
        }},
        {headerName: "Debit", field: "debitBalance", width: 100, cellRenderer: function(val){
            if(val.data.childAccounts.length > 0)
                return val.data.totalDebitBalance;
            return val.data.debitBalance;
        }},
        {headerName: "Credit", field: "creditBalance", width: 100, cellRenderer: function(val){
            if(val.data.childAccounts.length > 0)
                return val.data.totalCreditBalance;
            return val.data.creditBalance;
        }}
    ];

    var gridOptions = {
        columnDefs: columnDefs,
        rowData: @Html.Raw(Model),
        getNodeChildDetails: function(data) {
            if (data.childAccounts.length > 0) {
                return {
                    group: true,
                    children: data.childAccounts,
                    key: data.accountName
                };
            } else {
                return null;
            }
        },
        icons: {
            groupExpanded: '<i class="fa fa-minus-square-o"/>',
            groupContracted: '<i class="fa fa-plus-square-o"/>'
        },        
        // PROPERTIES
        rowSelection: 'single',
        enableFilter: true,
        enableColResize: true,
    };

    function autoSizeAll() {
        var allColumnIds = [];
        columnDefs.forEach( function(columnDef) {
            allColumnIds.push(columnDef.field);
        });
        gridOptions.columnApi.autoSizeColumns(allColumnIds);
    }

    // wait for the document to be loaded, otherwise
    // ag-Grid will not find the div in the document.
    document.addEventListener("DOMContentLoaded", function() {
        var eGridDiv = document.querySelector('#accounts');
        new agGrid.Grid(eGridDiv, gridOptions);
        autoSizeAll();
    });
</script>